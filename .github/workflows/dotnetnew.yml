name: Deploy .NET Core app to IIS

on:
  workflow_dispatch:  # Manually trigger this workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.203'  # Ensure the SDK version matches your requirement

      - name: Restore .NET Core dependencies
        run: dotnet restore actions/aspnet6/aspnet6.csproj

      - name: Build .NET Core app
        run: dotnet build actions/aspnet6/aspnet6.csproj -c Release

      - name: Publish .NET Core app
        run: dotnet publish actions/aspnet6/aspnet6.csproj -c Release -o ${{ github.workspace }}/publish

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: drop
          path: ${{ github.workspace }}/publish

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure deploy runs after the build job

    steps:
      - name: Checkout code (again for deploy job)
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: drop
          path: ${{ github.workspace }}/drop

      - name: Install sshpass
        run: sudo apt-get install sshpass  # Install sshpass for SCP and SSH commands

      - name: Upload published files to IIS Server
        env:
          SSH_PASS: ${{ secrets.IIS_PASSWORD }}
        run: |
          # Ensure you're uploading files to the correct IIS directory
          sshpass -p "$SSH_PASS" scp -o StrictHostKeyChecking=no -r ${{ github.workspace }}/drop/* ${{ secrets.IIS_USERNAME }}@${{ secrets.IIS_SERVER_IP }}:"C:/inetpub/wwwroot/webapp/"

      - name: Restart IIS
        env:
          SSH_PASS: ${{ secrets.IIS_PASSWORD }}
        run: |
          # Restart IIS to reflect the changes
          sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no ${{ secrets.IIS_USERNAME }}@${{ secrets.IIS_SERVER_IP }} "iisreset"
