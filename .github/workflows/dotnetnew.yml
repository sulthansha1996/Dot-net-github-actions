name: Deploy .NET app to Windows VM
 
on:
  workflow_dispatch:  # Allows manual triggering
 
jobs:
  deploy:
    runs-on: [self-hosted, X64, Windows]  # Targets Windows self-hosted runners
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.203  # Replace with your desired .NET version
      - name: Restore NuGet packages
        run: dotnet restore
      - name: Build the application
        run: dotnet build --configuration Release --no-restore
      - name: Publish the application
        run: dotnet publish --configuration Release --no-build -o ${{ github.workspace }}/publish
      - name: Stop IIS Application Pool (if applicable)
        run: |
          Import-Module WebAdministration -ErrorAction SilentlyContinue
          if (Get-WebAppPool -Name "DefaultAppPool" -ErrorAction SilentlyContinue) {
            Stop-WebAppPool -Name "DefaultAppPool"
            Write-Host "Application pool stopped"
          } else {
            Write-Host "Application pool not found or already stopped"
          }
        shell: powershell
        continue-on-error: true
      - name: Deploy to target directory
        run: |
          $TargetPath = "C:\inetpub\wwwroot\apsdotnet6"
          # Create directory if it doesn't exist
          if (-not (Test-Path -Path $TargetPath)) {
            New-Item -ItemType Directory -Path $TargetPath -Force
            Write-Host "Target directory created"
          }
          # Clean existing files
          Remove-Item -Path "$TargetPath\*" -Recurse -Force -ErrorAction SilentlyContinue
          Write-Host "Target directory cleaned"
          # Copy new files
          Copy-Item -Path "${{ github.workspace }}\publish\*" -Destination $TargetPath -Recurse -Force
          Write-Host "Files deployed successfully to $TargetPath"
        shell: powershell
      - name: Start IIS Application Pool (if applicable)
        run: |
          Import-Module WebAdministration -ErrorAction SilentlyContinue
          if (Get-WebAppPool -Name "DefaultAppPool" -ErrorAction SilentlyContinue) {
            Start-WebAppPool -Name "DefaultAppPool"
            Write-Host "Application pool started"
          }
        shell: powershell
        continue-on-error: true
      - name: Verify deployment
        run: |
          if (Test-Path -Path "C:\inetpub\wwwroot\aspdotnet6\*.dll") {
            Write-Host "Deployment verified successfully!"
          } else {
            Write-Host "Deployment verification failed - no DLL files found"
            exit 1
          }
        shell: powershell
